name: Profile pp Calculator
on:
  workflow_dispatch:
    inputs:
      player_id:
        description: "User ID or username to calculate"
        required: true
        type: string
      if_std:
        description: "Calculate std pp"
        required: true
        type: boolean
      if_taiko:
        description: "Calculate taiko pp"
        required: true
        type: boolean
      if_catch:
        description: "Calculate catch pp"
        required: true
        type: boolean
      if_mania:
        description: "Calculate mania pp"
        required: true
        type: boolean

jobs:
  calculator:
    runs-on: ubuntu-latest
    steps:
      - name: Check if player id is valid
        uses: actions/github-script@v7
        with:
          script: |
            const playerId = "${{github.event.inputs.player_id}}"
            if (!playerId.match(/^[A-Za-z0-9 \[\]_-]+$/)) {
              core.setFailed(`${{github.event.inputs.player_id}} is an invalid player id!`)
            }

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Fetch osu-tools
        run: git clone --recurse-submodules https://github.com/ppy/osu-tools

      - name: Pre-build
        run: dotnet run --project "./osu-tools/PerformanceCalculator" -- profile --help

      - name: Calculate std pp
        if: ${{ github.event.inputs.if_std == 'true' && success()}}
        run: dotnet run --project "./osu-tools/PerformanceCalculator" -- profile --ruleset 0 "${{github.event.inputs.player_id}}" ${{secrets.CLIENT_ID}} ${{secrets.CLIENT_TOKEN}} > "${{github.event.inputs.player_id}}-std.txt"

      - name: Get std brief result
        if: ${{ github.event.inputs.if_std == 'true' && success()}}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs')
            const readline = require('readline')

            const rl = readline.createInterface({
              input: fs.createReadStream('./${{github.event.inputs.player_id}}-std.txt'),
              crlfDelay: Infinity
            })

            let lineCounter = 0
            const outputLine = ['Mode:     std']
            let relevantSection = false

            rl.on('line', function (line) {
              if (line.startsWith('User:')) {
                relevantSection = true
              }

              if (relevantSection) {
                lineCounter++
                outputLine.push(line)
                if (lineCounter === 3) { rl.close() }
              }
            })

            rl.on('close', function() {
              core.notice(outputLine.join(' | '))
            })

      - name: Calculate taiko pp
        if: ${{ github.event.inputs.if_taiko == 'true' && success()}}
        run: dotnet run --project "./osu-tools/PerformanceCalculator" -- profile --ruleset 1 "${{github.event.inputs.player_id}}" ${{secrets.CLIENT_ID}} ${{secrets.CLIENT_TOKEN}} > "${{github.event.inputs.player_id}}-taiko.txt"

      - name: Get taiko brief result
        if: ${{ github.event.inputs.if_taiko == 'true' && success()}}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs')
            const readline = require('readline')

            const rl = readline.createInterface({
              input: fs.createReadStream('./${{github.event.inputs.player_id}}-taiko.txt'),
              crlfDelay: Infinity
            })

            let lineCounter = 0
            const outputLine = ['Mode:     taiko']
            let relevantSection = false

            rl.on('line', function (line) {
              if (line.startsWith('User:')) {
                relevantSection = true
              }

              if (relevantSection) {
                lineCounter++
                outputLine.push(line)
                if (lineCounter === 3) { rl.close() }
              }
            })

            rl.on('close', function() {
              core.notice(outputLine.join(' | '))
            })

      - name: Calculate catch pp
        if: ${{ github.event.inputs.if_catch == 'true' && success()}}
        run: dotnet run --project "./osu-tools/PerformanceCalculator" -- profile --ruleset 2 "${{github.event.inputs.player_id}}" ${{secrets.CLIENT_ID}} ${{secrets.CLIENT_TOKEN}} > "${{github.event.inputs.player_id}}-catch.txt"

      - name: Get catch brief result
        if: ${{ github.event.inputs.if_catch == 'true' && success()}}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs')
            const readline = require('readline')

            const rl = readline.createInterface({
              input: fs.createReadStream('./${{github.event.inputs.player_id}}-catch.txt'),
              crlfDelay: Infinity
            })

            let lineCounter = 0
            const outputLine = ['Mode:     catch']
            let relevantSection = false

            rl.on('line', function (line) {
              if (line.startsWith('User:')) {
                relevantSection = true
              }

              if (relevantSection) {
                lineCounter++
                outputLine.push(line)
                if (lineCounter === 3) { rl.close() }
              }
            })

            rl.on('close', function() {
              core.notice(outputLine.join(' | '))
            })

      - name: Calculate mania pp
        if: ${{ github.event.inputs.if_mania == 'true' && success()}}
        run: dotnet run --project "./osu-tools/PerformanceCalculator" -- profile --ruleset 3 "${{github.event.inputs.player_id}}" ${{secrets.CLIENT_ID}} ${{secrets.CLIENT_TOKEN}} > "${{github.event.inputs.player_id}}-mania.txt"

      - name: Get mania brief result
        if: ${{ github.event.inputs.if_mania == 'true' && success()}}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs')
            const readline = require('readline')

            const rl = readline.createInterface({
              input: fs.createReadStream('./${{github.event.inputs.player_id}}-mania.txt'),
              crlfDelay: Infinity
            })

            let lineCounter = 0
            const outputLine = ['Mode:     mania']
            let relevantSection = false

            rl.on('line', function (line) {
              if (line.startsWith('User:')) {
                relevantSection = true
              }

              if (relevantSection) {
                lineCounter++
                outputLine.push(line)
                if (lineCounter === 3) { rl.close() }
              }
            })

            rl.on('close', function() {
              core.notice(outputLine.join(' | '))
            })

      - name: Get current date
        run: echo "RUN_DATE=$(date --rfc-3339=date)" >> ${GITHUB_ENV}

      - name: Upload detailed result
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ${{github.event.inputs.player_id}}-profile-${{env.RUN_DATE}}
          path: ./*.txt