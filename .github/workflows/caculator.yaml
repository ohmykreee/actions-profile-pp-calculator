name: Profile pp Calculator
on:
  workflow_dispatch:
    inputs:
      player_id:
        description: "User ID or username to calculate"
        required: true
        type: string
      if_std:
        description: "Calculate std pp"
        required: true
        type: boolean
      if_taiko:
        description: "Calculate taiko pp"
        required: true
        type: boolean
      if_catch:
        description: "Calculate catch pp"
        required: true
        type: boolean
      if_mania:
        description: "Calculate mania pp"
        required: true
        type: boolean

jobs:
  calculator:
    runs-on: ubuntu-latest
    steps:
      - name: Check if player id is valid
        uses: actions/github-script@v7
        with:
          script: |
            const playerId = "${{github.event.inputs.player_id}}"
            if (!playerId.match(/^[A-Za-z0-9 \[\]_-]+$/)) {
              core.setFailed(`${{github.event.inputs.player_id}} is an invalid player id!`)
            }

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Fetch osu-tools
        run: git clone --recurse-submodules https://github.com/ppy/osu-tools

      - name: Pre-build
        run: dotnet run --project "./osu-tools/PerformanceCalculator" -- profile --help

      - name: Calculate std pp
        if: ${{ github.event.inputs.if_std == 'true' && success()}}
        run: dotnet run --project "./osu-tools/PerformanceCalculator" -- profile --ruleset 0 "${{github.event.inputs.player_id}}" ${{secrets.CLIENT_ID}} ${{secrets.CLIENT_TOKEN}} | tee "${{github.event.inputs.player_id}}-std.txt"

      - name: Clean and get std brief result
        if: ${{ github.event.inputs.if_std == 'true' && success()}}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs')
            const path = './${{github.event.inputs.player_id}}-std.txt'
            const lines = fs.readFileSync(path, 'utf-8').split('\n')
            const userIndex = lines.findIndex(line => line.startsWith('User:'))
            if (userIndex === -1) {
              throw new Error('Wrong output file: Missing User keywords')
            }
            const relevantContent = lines.slice(userIndex)
            fs.writeFileSync(path, relevantContent.join('\n'), 'utf-8')
            const outputLine = ['Mode:     std', ...relevantContent.slice(0, 3)]
            core.notice(outputLine.join(' | '))

      - name: Calculate taiko pp
        if: ${{ github.event.inputs.if_taiko == 'true' && success()}}
        run: dotnet run --project "./osu-tools/PerformanceCalculator" -- profile --ruleset 1 "${{github.event.inputs.player_id}}" ${{secrets.CLIENT_ID}} ${{secrets.CLIENT_TOKEN}} | tee "${{github.event.inputs.player_id}}-taiko.txt"

      - name: Clean and get taiko brief result
        if: ${{ github.event.inputs.if_taiko == 'true' && success()}}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs')
            const path = './${{github.event.inputs.player_id}}-taiko.txt'
            const lines = fs.readFileSync(path, 'utf-8').split('\n')
            const userIndex = lines.findIndex(line => line.startsWith('User:'))
            if (userIndex === -1) {
              throw new Error('Wrong output file: Missing User keywords')
            }
            const relevantContent = lines.slice(userIndex)
            fs.writeFileSync(path, relevantContent.join('\n'), 'utf-8')
            const outputLine = ['Mode:     std', ...relevantContent.slice(0, 3)]
            core.notice(outputLine.join(' | '))

      - name: Calculate catch pp
        if: ${{ github.event.inputs.if_catch == 'true' && success()}}
        run: dotnet run --project "./osu-tools/PerformanceCalculator" -- profile --ruleset 2 "${{github.event.inputs.player_id}}" ${{secrets.CLIENT_ID}} ${{secrets.CLIENT_TOKEN}} | tee "${{github.event.inputs.player_id}}-catch.txt"

      - name: Clean and get catch brief result
        if: ${{ github.event.inputs.if_catch == 'true' && success()}}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs')
            const path = './${{github.event.inputs.player_id}}-catch.txt'
            const lines = fs.readFileSync(path, 'utf-8').split('\n')
            const userIndex = lines.findIndex(line => line.startsWith('User:'))
            if (userIndex === -1) {
              throw new Error('Wrong output file: Missing User keywords')
            }
            const relevantContent = lines.slice(userIndex)
            fs.writeFileSync(path, relevantContent.join('\n'), 'utf-8')
            const outputLine = ['Mode:     std', ...relevantContent.slice(0, 3)]
            core.notice(outputLine.join(' | '))

      - name: Calculate mania pp
        if: ${{ github.event.inputs.if_mania == 'true' && success()}}
        run: dotnet run --project "./osu-tools/PerformanceCalculator" -- profile --ruleset 3 "${{github.event.inputs.player_id}}" ${{secrets.CLIENT_ID}} ${{secrets.CLIENT_TOKEN}} | tee "${{github.event.inputs.player_id}}-mania.txt"

      - name: Clean and get mania brief result
        if: ${{ github.event.inputs.if_mania == 'true' && success()}}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs')
            const path = './${{github.event.inputs.player_id}}-mania.txt'
            const lines = fs.readFileSync(path, 'utf-8').split('\n')
            const userIndex = lines.findIndex(line => line.startsWith('User:'))
            if (userIndex === -1) {
              throw new Error('Wrong output file: Missing User keywords')
            }
            const relevantContent = lines.slice(userIndex)
            fs.writeFileSync(path, relevantContent.join('\n'), 'utf-8')
            const outputLine = ['Mode:     std', ...relevantContent.slice(0, 3)]
            core.notice(outputLine.join(' | '))

      - name: Get current date
        run: echo "RUN_DATE=$(date --rfc-3339=date)" >> ${GITHUB_ENV}

      - name: Upload detailed result
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ${{github.event.inputs.player_id}}-profile-${{env.RUN_DATE}}
          path: ./*.txt