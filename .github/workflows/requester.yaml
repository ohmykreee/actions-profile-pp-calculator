name: Handle calculate request from issue
on: 
  issues:
    types:
      - opened

jobs:
  handler:
    runs-on: ubuntu-latest
    outputs:
      player_id: ${{ steps.request-handler.outputs.player_id }}
      if_std: ${{ steps.request-handler.outputs.if_std }}
      if_taiko: ${{ steps.request-handler.outputs.if_taiko }}
      if_catch: ${{ steps.request-handler.outputs.if_catch }}
      if_mania: ${{ steps.request-handler.outputs.if_mania }}
    steps:
      - name: Test if need to calculate
        if: contains( ${{ github.event.issue.title }}, '[Calculate Request]' )
        id: request-handler
        uses: actions/github-script@v6
        with:
          script: |
            const issue_input = JSON.parse(`${{ github.event.issue.body }}`)
            core.setOutput("player_id", issue_input.player_id )
            core.setOutput("if_std", issue_input.calculate_std )
            core.setOutput("if_taiko", issue_input.calculate_taiko )
            core.setOutput("if_catch", issue_input.calculate_catch )
            core.setOutput("if_mania", issue_input.calculate_mania )
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `**Welcome**, @${{ github.actor }}

                Your request has been handled, you can get your result here: 
                ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`
            })

  calculator:
    needs: handler
    runs-on: ubuntu-latest
    steps:
      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.x'

      - name: Fetch osu-tools
        run: git clone --recurse-submodules https://github.com/ppy/osu-tools

      - name: Pre-build
        run: dotnet run --project "./osu-tools/PerformanceCalculator" -- profile --help

      - name: Calculate std pp
        if: ${{ needs.handler.outputs.if_std == 'true' }}
        run: dotnet run --project "./osu-tools/PerformanceCalculator" -- profile --ruleset 0 --output "${{needs.handler.outputs.player_id}}-std.txt" "${{needs.handler.outputs.player_id}}" ${{secrets.CLIENT_ID}} ${{secrets.CLIENT_TOKEN}}

      - name: Get std brief result
        if: ${{ needs.handler.outputs.if_std == 'true' }}
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs')
            const readline = require('readline')

            const rl = readline.createInterface({
              input: fs.createReadStream('./${{needs.handler.outputs.player_id}}-std.txt'),
              crlfDelay: Infinity
            })

            let lineCounter = 0
            const outputLine = ['Mode:     std']

            rl.on('line', function (line) {
              lineCounter++
              outputLine.push(line)
              if(lineCounter==3){rl.close()}
            })

            rl.on('close', function() {
              core.notice(outputLine.join(' | '))
            })

      - name: Calculate taiko pp
        if: ${{ needs.handler.outputs.if_taiko == 'true' }}
        run: dotnet run --project "./osu-tools/PerformanceCalculator" -- profile --ruleset 1 --output "${{needs.handler.outputs.player_id}}-taiko.txt" "${{needs.handler.outputs.player_id}}" ${{secrets.CLIENT_ID}} ${{secrets.CLIENT_TOKEN}}

      - name: Get taiko brief result
        if: ${{ needs.handler.outputs.if_taiko == 'true' }}
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs')
            const readline = require('readline')

            const rl = readline.createInterface({
              input: fs.createReadStream('./${{needs.handler.outputs.player_id}}-taiko.txt'),
              crlfDelay: Infinity
            })

            let lineCounter = 0
            const outputLine = ['Mode:     taiko']

            rl.on('line', function (line) {
              lineCounter++
              outputLine.push(line)
              if(lineCounter==3){rl.close()}
            })

            rl.on('close', function() {
              core.notice(outputLine.join(' | '))
            })

      - name: Calculate catch pp
        if: ${{ needs.handler.outputs.if_catch == 'true' }}
        run: dotnet run --project "./osu-tools/PerformanceCalculator" -- profile --ruleset 2 --output "${{needs.handler.outputs.player_id}}-catch.txt" "${{needs.handler.outputs.player_id}}" ${{secrets.CLIENT_ID}} ${{secrets.CLIENT_TOKEN}}

      - name: Get catch brief result
        if: ${{ needs.handler.outputs.if_catch == 'true' }}
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs')
            const readline = require('readline')

            const rl = readline.createInterface({
              input: fs.createReadStream('./${{needs.handler.outputs.player_id}}-catch.txt'),
              crlfDelay: Infinity
            })

            let lineCounter = 0
            const outputLine = ['Mode:     catch']

            rl.on('line', function (line) {
              lineCounter++
              outputLine.push(line)
              if(lineCounter==3){rl.close()}
            })

            rl.on('close', function() {
              core.notice(outputLine.join(' | ))
            })

      - name: Calculate mania pp
        if: ${{ needs.handler.outputs.if_mania == 'true' }}
        run: dotnet run --project "./osu-tools/PerformanceCalculator" -- profile --ruleset 3 --output "${{needs.handler.outputs.player_id}}-mania.txt" "${{needs.handler.outputs.player_id}}" ${{secrets.CLIENT_ID}} ${{secrets.CLIENT_TOKEN}}

      - name: Get mania brief result
        if: ${{ needs.handler.outputs.if_mania == 'true' }}
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs')
            const readline = require('readline')

            const rl = readline.createInterface({
              input: fs.createReadStream('./${{needs.handler.outputs.player_id}}-mania.txt'),
              crlfDelay: Infinity
            })

            let lineCounter = 0
            const outputLine = ['Mode:     mania']

            rl.on('line', function (line) {
              lineCounter++
              outputLine.push(line)
              if(lineCounter==3){rl.close()}
            })

            rl.on('close', function() {
              core.notice(outputLine.join(' | '))
            })

      - name: Get current date
        run: echo "RUN_DATE=$(date --rfc-3339=date)" >> ${GITHUB_ENV}

      - name: Upload detailed result
        uses: actions/upload-artifact@v3
        with:
          name: ${{needs.handler.outputs.player_id}}-profile-${{env.RUN_DATE}}
          path: ./*.txt
      
      - name: Close current issue
        uses: peter-evans/close-issue@v2
        with:
          comment: |
            Workflow run has done!
            See result here: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            Auto-closing this issue.